# https://help.github.com/en/categories/automating-your-workflow-with-github-actions

name: "Markdown Lint"

on: # yamllint disable-line rule:truthy
    push:
        paths:
            - "**.md"
    pull_request:
        paths:
            - "**.md"

# Enable this to use the github packages
# yamllint disable-line rule:comments
#env:
#    package: "@${{ github.repository }}"
#    registry_url: "https://npm.pkg.github.com"
#    scope: "${{ github.repository_owner }}"

jobs:
    text-lint:
        name: "Markdown lint"

        runs-on: "ubuntu-latest"

        steps:
            - name: "Git checkout"
              uses: "actions/checkout@v2"
              with:
                  fetch-depth: 0
                  persist-credentials: false
              env:
                  GIT_COMMITTER_NAME: "GitHub Actions Shell"
                  GIT_AUTHOR_NAME: "GitHub Actions Shell"
                  EMAIL: "github-actions[bot]@users.noreply.github.com"

            - name: "Configure Container"
              env:
                  GIT_USER_EMAIL: "${{ secrets.GIT_USER_EMAIL }}"
                  GIT_USER_USERNAME: "${{ secrets.GIT_USER_USERNAME }}"
              run: |
                  EMAIL=${GIT_USER_EMAIL:-"github-actions[bot]@users.noreply.github.com"}
                  NAME=${GIT_USER_USERNAME:-"github-actions-shell"}

                  git config --global user.email "${EMAIL}"
                  git config --global user.name "${NAME}"

            - name: "Use Node.js 16.x"
              uses: actions/setup-node@v3
              with:
                  node-version: "16.x"
                  # Enable this to use the github packages
                  # registry-url: "${{ env.registry_url }}"
                  # Defaults to the user or organization that owns the workflow file
                  # scope: "@${{ env.scope }}"

            - name: "Get yarn cache directory path"
              id: "yarn-cache-dir-path"
              run: "echo \"::set-output name=dir::$(yarn config get cacheFolder)\""

            - uses: "actions/cache@v2"
              id: "yarn-cache" # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
              with:
                  path: "${{ steps.yarn-cache-dir-path.outputs.dir }}"
                  key: "${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}"
                  restore-keys: |
                      ${{ runner.os }}-yarn-

            - name: "install"
              run: "yarn install --immutable"

            - name: "lint"
              run: "yarn lint:text"
